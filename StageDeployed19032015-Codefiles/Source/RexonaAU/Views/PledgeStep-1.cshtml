@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using System.Configuration;
@using RexonaAU.Helpers;

@{
    Layout = "_Baselayout.cshtml";
    Common.SetNoBrowserCacheForpage();
    Common.CheckUserSessionValidity(CurrentPage.id);
}
@Html.Partial("_CreatePledge", new RexonaAU.Models.PledgeModel())


@{
    string CheckIfProd = ConfigurationManager.AppSettings["CheckIfProd"];
    bool CheckIfProdEnvironment = false;
    bool.TryParse(CheckIfProd, out CheckIfProdEnvironment);
    if (CheckIfProdEnvironment)
    {
    <script type='text/javascript'>
        // Conversion Name: Conversion Page 3: Enter Goal
        // INSTRUCTIONS 
        // The Conversion Tags should be placed at the top of the <BODY> section of the HTML page. 
        // In case you want to ensure that the full page loads as a prerequisite for a conversion 
        // being recorded, place the tag at the bottom of the page. Note, however, that this may 
        // skew the data in the case of slow-loading pages and in general not recommended. 
        //
        // NOTE: It is possible to test if the tags are working correctly before campaign launch 
        // as follows:  Browse to http://bs.serving-sys.com/Serving/adServer.bs?cn=at, which is 
        // a page that lets you set your local machine to 'testing' mode.  In this mode, when 
        // visiting a page that includes an conversion tag, a new window will open, showing you 
        // the data sent by the conversion tag to the MediaMind servers. 
        // 
        // END of instructions (These instruction lines can be deleted from the actual HTML)
        var ebRand = Math.random() + '';
        ebRand = ebRand * 1000000;
        document.write('<scr' + 'ipt src="HTTPS://bs.serving-sys.com/Serving/ActivityServer.bs?cn=as&amp;ActivityID=542145&amp;rnd=' + ebRand + '"></scr' + 'ipt>');
    </script>
    <noscript>
        <img width="1" height="1" style="border: 0" src="HTTPS://bs.serving-sys.com/Serving/ActivityServer.bs?cn=as&amp;ActivityID=542145&amp;ns=1" />
    </noscript>
    }
    
}
<script type="text/javascript">
    $(document).ready(function () {
        var IsJoined = JSON.parse(sessionStorage.getItem('IsJoined'));
        if (IsJoined) {
            $('#pledges').val(sessionStorage.getItem('PledgeTitle')).attr('disabled', 'disabled');
            $('#hdnId').val(sessionStorage.getItem('PledgeId'));
            sessionStorage.setItem('IsJoined', false);
        }
        var IsInvited = JSON.parse(sessionStorage.getItem('FbInvite'));
        if (IsInvited) {
            $('#pledges').val(sessionStorage.getItem('InvitePledgeTitle')).attr('disabled', 'disabled');
            $('#hdnId').val(sessionStorage.getItem('InvitePledgeId'));
            var type = sessionStorage.getItem('InvitePledgeType');
            $('#privacy-selection').css('background-color', '#dddddd');
            if (type.toLowerCase().indexOf('close') > -1) {
                $("#privacy-selection").val('private').attr('disabled', 'disabled');
            }
            else {
                $("#privacy-selection").val('public').attr('disabled', 'disabled');
            }
            sessionStorage.setItem('FbInvite', false);
        }

        //back
        var IsBack = JSON.parse(sessionStorage.getItem('backPressed'));
        if (IsBack) {
            if (sessionStorage.getItem('startDate') != null && sessionStorage.getItem('startDate') != '') {

                var pickerStartDate = $('.datepicker-regular').pickadate('picker');
                pickerStartDate.set('select', sessionStorage.getItem('startDate'), { format: 'd mmmm, yyyy' });
            }
            if (sessionStorage.getItem('endDate') != null && sessionStorage.getItem('endDate') != '') {
                var pickerEndDate = $('.datepicker-finish').pickadate('picker');
                pickerEndDate.set('select', sessionStorage.getItem('endDate'), { format: 'd mmmm, yyyy' });
            }

            $('#pledges').val(sessionStorage.getItem('goal'));
            $('#hdnId').val(sessionStorage.getItem('goalId'));
            if (sessionStorage.getItem('goalType') != null && sessionStorage.getItem('goalType') != '') {
                $("#privacy-selection").val(sessionStorage.getItem('goalType'));
            }
            if (sessionStorage.getItem('firstName') != null && sessionStorage.getItem('firstName') != '') {
                $('#firstname').val(sessionStorage.getItem('firstName'));
                $('#lastname').val(sessionStorage.getItem('lastName'));
            }

            sessionStorage.setItem('backPressed', false);
        }
    })
</script>
@if (!string.IsNullOrEmpty(TempData["DuplicateErrorMessage"] != null ? TempData["DuplicateErrorMessage"].ToString() : string.Empty))
{
    <script type="text/javascript">
        $(document).ready(function () {
            new jBox('Notice', {
                content: '@Html.Raw(TempData["DuplicateErrorMessage"].ToString())',
                color: 'red',
                theme: 'NoticeBorder'
            });
        });
    </script>
    TempData["DuplicateErrorMessage"] = null;
}